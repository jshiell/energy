<!doctype html>
<html lang="en">

<head>
	<title>Energy Usage</title>
	<script src="public/Chart.min.js"></script>
	<style>
	canvas{
		-moz-user-select: none;
		-webkit-user-select: none;
		-ms-user-select: none;
	}
    </style>
    <meta charset="utf-8"/>
</head>

<body>
    <select id="property"></select>
    <button id="fetchData">Fetch Data</button>
    <br>
    <br>
	<div style="width:75%;">
		<canvas id="canvas"></canvas>
	</div>
	<script>
        (function () {
            var properties = [
                {{#each properties}}
                {
                    name: '{{ name }}',
                    apiKey: '{{ apiKey }}',
                    mprn: '{{ mprn }}',
                    gasSerial: '{{ gasSerial }}',
                    smets: {{ smets }},
                    correctionFactor: {{ correctionFactor }},
                    calorificValue: {{ calorificValue }},
                    mpan: '{{ mpan }}',
                    electricitySerial: '{{ electricitySerial }}',
                }{{#unless @last}},{{/unless}}
                {{/each}}
            ];

            var config = {
                type: 'line',
                data: {},
                options: {
                    responsive: true,
                    title: {
                        display: true,
                        text: 'Energy Usage'
                    },
                    tooltips: {
                        mode: 'index',
                        intersect: false,
                    },
                    hover: {
                        mode: 'nearest',
                        intersect: true
                    },
                    scales: {
                        xAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Time'
                            }
                        }],
                        yAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Energy Used (kWh)'
                            }
                        }]
                    }
                }
            };

            var setUp = function () {
                var ctx = document.getElementById('canvas').getContext('2d');
                window.lineChart = new Chart(ctx, config);

                var propertyCombo = document.getElementById('property');
                properties.forEach(function (property) {
                    var option = document.createElement('option');
                    option.innerHTML = property.name;
                    propertyCombo.appendChild(option);
                });
            };

            var invokeCallbackOnSuccess = function (request, callback) {
                return function () {
                    console.log('Callback handler invoked');
                    if (request.status == 200) {
                        callback(request.response);
                    } else {
                        console.log('Request failed with status ' + request.status);
                    }
                };
            };

            var queryOctopusUri = function (uri, apiKey, callback) {
                var request = new XMLHttpRequest();
                request.addEventListener("load", invokeCallbackOnSuccess(request, callback));
                request.addEventListener("error", function (e) {
                    console.log('The request failed with an error - XHR blocking perhaps?');
                });
                request.responseType = 'json';
                request.open('GET', '/octopus' + uri, true, apiKey);
                request.send();
            };

            var getGasUsage = function (apiKey, mprn, meterSerialNumber, callback) {
                queryOctopusUri('/v1/gas-meter-points/' + mprn + '/meters/' + meterSerialNumber + '/consumption/?page=1', apiKey, callback);
            };

            var getElectricityUsage = function (apiKey, mpan, meterSerialNumber, callback) {
                queryOctopusUri('/v1/electricity-meter-points/' + mpan + '/meters/' + meterSerialNumber + '/consumption/?page=1', apiKey, callback);
            };

            var pad = function (num, size) {
                var formatted = num.toString();
                while (formatted.length < size) {
                    formatted = '0' + formatted;
                }
                return formatted;
            };

            var formatDate = function (stringDate) {
                var startDateTime = new Date(Date.parse(stringDate));
                return startDateTime.getDate() + '/' + (startDateTime.getMonth() + 1) +
                        ' ' + pad(startDateTime.getHours(), 2) + ':' + pad(startDateTime.getMinutes(), 2);
            };

            var filterUnique = function (value, index, self) {
                return self.indexOf(value) === index;
            };

            var formatStartIntervals = function (results) {
                return results.map(function (result) { return formatDate(result.interval_start); });
            };

            var convertGasMetersCubedToKwh = function (gasVolumeM3, correctionFactor, calorificValue) {
                var kWhConversionFactor = 3.6;
                return gasVolumeM3 * (correctionFactor || 1.02264) * (calorificValue || 40) / kWhConversionFactor; 
            };
 
            var refreshData = function () {
                var propertyName = document.getElementById('property').value;
                var property = properties.filter(function (candidate) { return candidate.name === propertyName; })[0];
                if (property === null) {
                    alert("Couldn't match property " + propertyName);
                    return;
                }

                console.log(property);

                getGasUsage(property.apiKey, property.mprn, property.gasSerial, function (data) {
                    var gasResults = data.results.reverse();
                    console.log(gasResults);
                    getElectricityUsage(property.apiKey, property.mpan, property.electricitySerial, function (data) {
                        var electricityResults = data.results.reverse();
                        var labels = formatStartIntervals(gasResults).
                            concat(formatStartIntervals(electricityResults)).
                            filter(filterUnique);
                        config.data = {
                            labels: labels,
                            datasets: [
                                {
                                    label: 'Gas usage',
                                    data: gasResults.map(function (result) {
                                        if (property.smets === 1) {
                                            return result.consumption;
                                        } else {
                                            return convertGasMetersCubedToKwh(result.consumption, property.correctionFactor, properties.calorificValue);
                                        }
                                    }),
                                    backgroundColor: 'rgba(255, 0, 0, 0.3)',
                                    borderColor: 'rgba(255, 0, 0, 0.5)'
                                },
                                {
                                    label: 'Electricity',
                                    data: electricityResults.map(function (result) { return result.consumption; }),
                                    backgroundColor: 'rgba(0, 255, 0, 0.3)',
                                    borderColor: 'rgba(0, 255, 0, 0.5)'
                                }
                            ]
                        };
                        window.lineChart.update();
                    });
                });
            };

            window.onload = setUp;
            document.getElementById('fetchData').addEventListener('click', refreshData);
        })();
	</script>
</body>

</html>
